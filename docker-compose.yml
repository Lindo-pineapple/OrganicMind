services:
  web:
    build:
      context: ./web
      dockerfile: ./.docker/dev/Dockerfile
    restart: unless-stopped
    container_name: web
    volumes:
      - "./web:/app"
      - "/app/node_modules"
    ports:
      - 3000:3000
    command: >
      bash -c "cp -rfu /cache/node_modules/. /app/node_modules/  
      && npm run dev"
    develop:
      context: ./web
      watch:
        - action: sync
          path: ./web
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    labels:
      - "traefik.http.routers.frontend.rule=Host(`todoApp.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - server

  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    restart: unless-stopped
    container_name: server
    volumes:
      - "./server:/app"
      - "/app/node_modules"
    ports:
      - 5001:5001
    command: >
      bash -c "cp -rfu /cache/node_modules/. /app/node_modules/  
      && npm start"
    develop:
      context: ./server
      watch:
        - action: sync
          path: ./server
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    labels:
      - "traefik.http.routers.backend.rule=Host(`server.todoApp.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=5001"
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@todoApp.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80        # HTTP
      - 443:443       # HTTPS
      - 8080:8080     # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik-certificates:/letsencrypt"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017/
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    ports:
      - 8081:8081
    depends_on:
      - mongo

volumes:
  mongo-data:
  traefik-certificates:


# Explanation
# Traefik Configuration:

# Traefik Service: Added the Traefik service with configuration to handle HTTP (port 80) and HTTPS (port 443) traffic. It also has a dashboard available on port 8080.
# ACME Configuration: Handles automatic SSL certificate management with Let's Encrypt.
# Frontend and Backend Services:

# Labels: Added Traefik labels to configure routing rules.
# Frontend: Accessible via example.com, listening on HTTP.
# Backend: Accessible via api.example.com, with HTTPS enabled.
# Volumes:

# traefik-certificates: Volume for storing the certificates managed by Traefik.
# Notes
# Replace example.com and api.example.com: Update these placeholders with your actual domain names.
# ACME Email: Replace your-email@example.com with your actual email address for certificate management.
# NGINX Replacement: The NGINX service has been removed and replaced with Traefik.
# This configuration sets up Traefik as the entry point for all HTTP and HTTPS traffic, automatically managing SSL/TLS certificates and routing requests to your frontend and backend services based on the specified rules.